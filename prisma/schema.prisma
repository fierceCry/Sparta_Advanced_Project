generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique @map("email")
  password       String        @map("password")
  nickname       String        @map("nickname")
  role           Role          @default(APPLICANT) @map("role")
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  resumes        Resume[]
  recruiterLogs  ResumeLog[]   @relation("Recruiter")
  refreshToken   RefreshToken? @relation("UserRefreshToken")

  @@map("user")
}

model Resume {
  id             Int           @id @default(autoincrement())
  userId         Int           @map("user_id")
  title          String        @map("title")
  content        String        @map("content")
  applyStatus    ApplyStatus   @default(APPLY) @map("apply_status")
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @updatedAt @map("updated_at")
  user           User          @relation(fields: [userId], references: [id])
  resumeLogs     ResumeLog[]

  @@map("resume")
}

model ResumeLog {
  id                 Int         @id @default(autoincrement())
  resumeId           Int         @map("resume_id")
  recruiterId        Int         @map("recruiter_id")
  oldApplyStatus     ApplyStatus @map("old_apply_status")
  newApplyStatus     ApplyStatus @map("new_apply_status")
  reason             String      @map("reason")
  createdAt          DateTime    @default(now()) @map("created_at")
  updatedAt          DateTime    @updatedAt @map("updated_at")
  resume             Resume      @relation(fields: [resumeId], references: [id])
  recruiter          User        @relation("Recruiter", fields: [recruiterId], references: [id])

  @@map("resume_log")
}

model RefreshToken {
  id           Int      @id @default(autoincrement())
  refreshToken String   @map("refresh_token") 
  userId       Int      @unique @map("user_id")
  user         User     @relation("UserRefreshToken", fields: [userId], references: [id])
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("refresh_token")
}

enum Role {
  APPLICANT
  RECRUITER
}

enum ApplyStatus {
  APPLY
  DROP  
  PASS
  INTERVIEW1
  INTERVIEW2
  FINAL_PASS
}
